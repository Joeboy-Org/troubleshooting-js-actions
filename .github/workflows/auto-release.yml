name: Automate Release

on:
    push:
       tags:
        - '*'
        

jobs:
  build:
    permissions: 
      contents: write
    runs-on: ubuntu-latest
    steps:

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT" 

      - name: Get tag name
        run: |
          # Example using Bash substring extraction
          echo TAG_NAME=${GITHUB_REF#refs/tags/} >> $GITHUB_ENV
          echo $TAG
    
      - uses: actions/checkout@v4

      - name: Artifact to be Upload
        run: |
            ls -ltr dist/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: $TAG_NAME
          release_name: Release for tag - $TAG_NAME and ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change

    #   - name: Upload Release Asset
    #     id: upload-release-asset 
    #     uses: actions/upload-release-asset@v1
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     with:
    #       upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
    #       asset_path: ./package.json
    #       asset_name: package.json
    #       asset_content_type: application/json